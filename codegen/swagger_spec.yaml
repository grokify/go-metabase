openapi: 3.0.0
info:
  version: 1.0.0
  title: Metabase
servers:
  - url: http://example.com/api
paths:
  /api/database:
    get:
      summary: List Databases
      operationId: listDatabases
      tags:
        - database
      description: Fetch all Databases. include_tables means we should hydrate the Tables belonging to each DB. include_cards here means we should also include virtual Table entries for saved Questions, e.g. so we can easily use them as source Tables in queries. Default for both is false.
      parameters:
        - name: include_tables
          in: query
          description: value may be nil, or if non-nil, value must be a valid boolean string ('true' or 'false').
          required: false
          schema:
            type: boolean
            default: false
        - name: include_cards
          in: query
          description: value may be nil, or if non-nil, value must be a valid boolean string ('true' or 'false').
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Database'
  /api/dataset:
    post:
      summary: Execute a query
      operationId: queryDatabase
      description: Execute a query and retrieve the results in the usual format.
      tags:
        - dataset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetQueryJsonQuery'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetQueryResults'
components:
  schemas:
    DatabaseDetails:
      type: object
      properties:
        host:
          type: string
        port:
          type: integer
          format: int32
        dbname:
          type: string
        authMech:
          type: integer
          format: int32
        user:
          type: string
        password:
          type: string
        connProperties:
          type: string
        let-user-control-scheduling:
          type: boolean
    DatabaseTable:
      type: object
      properties:
        description:
          type: string
        entity_type:
          description: unknown type
          type: string
        schema:
          type: string
        raw_table_id:
          description: unknown type
          type: string
        show_in_getting_started:
          type: boolean
        name:
          type: string
        caveats:
          description: unknown type
          type: string
        rows:
          type: integer
          format: int64
        updated_at:
          type: string
          format: date-time
        entity_name:
          description: unknown type
          type: string
        active:
          type: boolean
        id:
          type: integer
          format: int64
        db_id:
          type: integer
          format: int64
        visibility_type:
          description: unknown type
          type: string
        display_name:
          type: string
        created_at:
          type: string
          format: date-time
        points_of_interest:
          description: unknown type
          type: string
    Database:
      type: object
      required:
        - id  
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        features:
          type: array
          items:
            type: string
        is_full_sync:
          type: boolean
        is_sample:
          type: boolean
        cache_field_values_schedule:
          type: string
          format: cron-schedule
        metadata_sync_schedule:
          type: string
          format: cron-schedule
        caveats:
          description: type unknown
          type: string
        engine:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        native_permissions:
          type: string
        points_of_interest:
          description: type unknown
          type: string
        details:
          $ref: '#/components/schemas/DatabaseDetails'
        tables:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseTable'
    DatasetQueryOpts:
      type: object
      properties:
        description:
          type: string
        entity_type:
          description: unknown type
    DatasetQueryJsonQuery:
      type: object
      properties:
        database:
          type: integer
          format: int64
        type:
          type: string
          enum:
            - native
            - query
        native:
          $ref: '#/components/schemas/DatasetQueryNative'
        query:
          $ref: '#/components/schemas/DatasetQueryDsl'
        constraints:
          $ref: '#/components/schemas/DatasetQueryConstraints'
    DatasetQueryNative:
      type: object
      properties:
        # Native SQL query.
        query:
          type: string
    DatasetQueryDsl:
      type: object
      description: Dataset query request and response object
      properties:
        source_table:
          type: integer
          format: int64
        limit:
          type: integer
          format: int64
        page:
          $ref: '#/components/schemas/DatasetQueryDslPage'
    DatasetQueryDslPage:
      type: object
      properties:
        page:
          type: integer
          format: int64
        items:
          type: integer
          format: int64
    DatasetQueryConstraints:
      type: object
      properties:
        'max-results':
          type: integer
          format: int64
        'max-results-bare-rows':
          type: integer
          format: int64
    DatasetQueryResults:
      type: object
      properties:
        started_at:
          type: string
          format: date-time
        json_query:
          $ref: '#/components/schemas/DatasetQueryJsonQuery'
        average_execution_time:
          description: type unknown
          type: string
        status:
          type: string
        context:
          type: string
        row_count:
          type: integer
          format: int64
        running_time:
          type: integer
          format: int64
        data:
          type: array
          $ref: '#/components/schemas/DatasetQueryResultsData'
    DatasetQueryResultsCol:
      type: object
      properties:
        description:
          type: string
        table_id:
          type: integer
          format: int64
        schema_name:
          type: string
        special_type:
          type: string
        name:
          type: string
        source:
          type: string
        remapped_from:
          description: unknown type
          type: string
        extra_info:
          description: can be '{"target_table_id":517}'
          type: object
        fk_field_id:
          description: unknown type
          type: string
        remapped_to:
          description: unknown type
          type: string
        id:
          type: integer
          format: int64
        visibility_type:
          type: string
        target:
          $ref: 'DatasetQueryResultsColTarget'
        display_name:
          type: string
        fingerprint:
          $ref: 'DatasetQueryResultsColFingerprint'
        base_type:
          type: string
    DatasetQueryResultsColTarget:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        display_name:
          type: string
        table_id:
          type: integer
          format: int64
        description:
          type: string
        base_type:
          type: string
        special_type:
          type: string
        visibility_type:
          type: string
    DatasetQueryResultsColFingerprint:
      type: object
      properties:
        global:
          $ref: 'DatasetQueryResultsColFingerprintGlobal'
        type:
          description: map[string]DatasetQueryResultsColFingerprintType results in map[string]interface{}
          type: object
          #additionalProperties: true
          #items:
          #  $ref: 'DatasetQueryResultsColFingerprintType'
    DatasetQueryResultsColFingerprintGlobal:
      type: object
      properties:
        distinct-count:
          type: integer
          format: int64
    DatasetQueryResultsColFingerprintType:
      type: object
      properties:
        percent-json:
          type: number
          format: double
        percent-url:
          type: number
          format: double
        percent-email:
          type: number
          format: double
        average-length:
          type: number
          format: double
    DatasetQueryResultsNativeForm:
      type: object
      properties:
        query:
          type: string
        params:
          description: unknown type
          type: string
    DatasetQueryResultsData:
      type: object
      properties:
        columns:
          type: array
          items:
            type: string
        rows:
          type: array
          items:
            type: array
            items:
              oneOf:
                - string
                - number
                - integer
                - boolean
            #$ref: '#/components/schemas/ArrayString'
        native_form:
          $ref: '#/components/schemas/DatasetQueryResultsNativeForm'
        cols:
          type: array
          items:
            $ref: '#/components/schemas/DatasetQueryResultsCol'
        results_metadata:
          $ref: '#/components/schemas/DatasetQueryResultsMetadata'
        rows_truncated:
          type: integer
          format: int64
    DatasetQueryResultsMetadata:
      type: object
      properties:
        checksum:
          type: string
        columns:
          type: array
          items:
            $ref: '#/components/schemas/DatasetQueryResultsMetadataColumn'
    DatasetQueryResultsMetadataColumn:
      type: object
      properties:
        base_type:
          type: string
        display_name:
          type: string
        name:
          type: string
        special_type:
          type: string
