/*
Metabase

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metabase

import (
	"encoding/json"
)

// checks if the DatasetQueryResultsData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatasetQueryResultsData{}

// DatasetQueryResultsData struct for DatasetQueryResultsData
type DatasetQueryResultsData struct {
	Columns         []string                       `json:"columns,omitempty"`
	Rows            [][]interface{}                `json:"rows,omitempty"`
	NativeForm      *DatasetQueryResultsNativeForm `json:"native_form,omitempty"`
	Cols            []DatasetQueryResultsCol       `json:"cols,omitempty"`
	ResultsMetadata *DatasetQueryResultsMetadata   `json:"results_metadata,omitempty"`
	RowsTruncated   *int64                         `json:"rows_truncated,omitempty"`
}

// NewDatasetQueryResultsData instantiates a new DatasetQueryResultsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatasetQueryResultsData() *DatasetQueryResultsData {
	this := DatasetQueryResultsData{}
	return &this
}

// NewDatasetQueryResultsDataWithDefaults instantiates a new DatasetQueryResultsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatasetQueryResultsDataWithDefaults() *DatasetQueryResultsData {
	this := DatasetQueryResultsData{}
	return &this
}

// GetColumns returns the Columns field value if set, zero value otherwise.
func (o *DatasetQueryResultsData) GetColumns() []string {
	if o == nil || IsNil(o.Columns) {
		var ret []string
		return ret
	}
	return o.Columns
}

// GetColumnsOk returns a tuple with the Columns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatasetQueryResultsData) GetColumnsOk() ([]string, bool) {
	if o == nil || IsNil(o.Columns) {
		return nil, false
	}
	return o.Columns, true
}

// HasColumns returns a boolean if a field has been set.
func (o *DatasetQueryResultsData) HasColumns() bool {
	if o != nil && !IsNil(o.Columns) {
		return true
	}

	return false
}

// SetColumns gets a reference to the given []string and assigns it to the Columns field.
func (o *DatasetQueryResultsData) SetColumns(v []string) {
	o.Columns = v
}

// GetRows returns the Rows field value if set, zero value otherwise.
func (o *DatasetQueryResultsData) GetRows() [][]interface{} {
	if o == nil || IsNil(o.Rows) {
		var ret [][]interface{}
		return ret
	}
	return o.Rows
}

// GetRowsOk returns a tuple with the Rows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatasetQueryResultsData) GetRowsOk() ([][]interface{}, bool) {
	if o == nil || IsNil(o.Rows) {
		return nil, false
	}
	return o.Rows, true
}

// HasRows returns a boolean if a field has been set.
func (o *DatasetQueryResultsData) HasRows() bool {
	if o != nil && !IsNil(o.Rows) {
		return true
	}

	return false
}

// SetRows gets a reference to the given [][]interface{} and assigns it to the Rows field.
func (o *DatasetQueryResultsData) SetRows(v [][]interface{}) {
	o.Rows = v
}

// GetNativeForm returns the NativeForm field value if set, zero value otherwise.
func (o *DatasetQueryResultsData) GetNativeForm() DatasetQueryResultsNativeForm {
	if o == nil || IsNil(o.NativeForm) {
		var ret DatasetQueryResultsNativeForm
		return ret
	}
	return *o.NativeForm
}

// GetNativeFormOk returns a tuple with the NativeForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatasetQueryResultsData) GetNativeFormOk() (*DatasetQueryResultsNativeForm, bool) {
	if o == nil || IsNil(o.NativeForm) {
		return nil, false
	}
	return o.NativeForm, true
}

// HasNativeForm returns a boolean if a field has been set.
func (o *DatasetQueryResultsData) HasNativeForm() bool {
	if o != nil && !IsNil(o.NativeForm) {
		return true
	}

	return false
}

// SetNativeForm gets a reference to the given DatasetQueryResultsNativeForm and assigns it to the NativeForm field.
func (o *DatasetQueryResultsData) SetNativeForm(v DatasetQueryResultsNativeForm) {
	o.NativeForm = &v
}

// GetCols returns the Cols field value if set, zero value otherwise.
func (o *DatasetQueryResultsData) GetCols() []DatasetQueryResultsCol {
	if o == nil || IsNil(o.Cols) {
		var ret []DatasetQueryResultsCol
		return ret
	}
	return o.Cols
}

// GetColsOk returns a tuple with the Cols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatasetQueryResultsData) GetColsOk() ([]DatasetQueryResultsCol, bool) {
	if o == nil || IsNil(o.Cols) {
		return nil, false
	}
	return o.Cols, true
}

// HasCols returns a boolean if a field has been set.
func (o *DatasetQueryResultsData) HasCols() bool {
	if o != nil && !IsNil(o.Cols) {
		return true
	}

	return false
}

// SetCols gets a reference to the given []DatasetQueryResultsCol and assigns it to the Cols field.
func (o *DatasetQueryResultsData) SetCols(v []DatasetQueryResultsCol) {
	o.Cols = v
}

// GetResultsMetadata returns the ResultsMetadata field value if set, zero value otherwise.
func (o *DatasetQueryResultsData) GetResultsMetadata() DatasetQueryResultsMetadata {
	if o == nil || IsNil(o.ResultsMetadata) {
		var ret DatasetQueryResultsMetadata
		return ret
	}
	return *o.ResultsMetadata
}

// GetResultsMetadataOk returns a tuple with the ResultsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatasetQueryResultsData) GetResultsMetadataOk() (*DatasetQueryResultsMetadata, bool) {
	if o == nil || IsNil(o.ResultsMetadata) {
		return nil, false
	}
	return o.ResultsMetadata, true
}

// HasResultsMetadata returns a boolean if a field has been set.
func (o *DatasetQueryResultsData) HasResultsMetadata() bool {
	if o != nil && !IsNil(o.ResultsMetadata) {
		return true
	}

	return false
}

// SetResultsMetadata gets a reference to the given DatasetQueryResultsMetadata and assigns it to the ResultsMetadata field.
func (o *DatasetQueryResultsData) SetResultsMetadata(v DatasetQueryResultsMetadata) {
	o.ResultsMetadata = &v
}

// GetRowsTruncated returns the RowsTruncated field value if set, zero value otherwise.
func (o *DatasetQueryResultsData) GetRowsTruncated() int64 {
	if o == nil || IsNil(o.RowsTruncated) {
		var ret int64
		return ret
	}
	return *o.RowsTruncated
}

// GetRowsTruncatedOk returns a tuple with the RowsTruncated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatasetQueryResultsData) GetRowsTruncatedOk() (*int64, bool) {
	if o == nil || IsNil(o.RowsTruncated) {
		return nil, false
	}
	return o.RowsTruncated, true
}

// HasRowsTruncated returns a boolean if a field has been set.
func (o *DatasetQueryResultsData) HasRowsTruncated() bool {
	if o != nil && !IsNil(o.RowsTruncated) {
		return true
	}

	return false
}

// SetRowsTruncated gets a reference to the given int64 and assigns it to the RowsTruncated field.
func (o *DatasetQueryResultsData) SetRowsTruncated(v int64) {
	o.RowsTruncated = &v
}

func (o DatasetQueryResultsData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatasetQueryResultsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Columns) {
		toSerialize["columns"] = o.Columns
	}
	if !IsNil(o.Rows) {
		toSerialize["rows"] = o.Rows
	}
	if !IsNil(o.NativeForm) {
		toSerialize["native_form"] = o.NativeForm
	}
	if !IsNil(o.Cols) {
		toSerialize["cols"] = o.Cols
	}
	if !IsNil(o.ResultsMetadata) {
		toSerialize["results_metadata"] = o.ResultsMetadata
	}
	if !IsNil(o.RowsTruncated) {
		toSerialize["rows_truncated"] = o.RowsTruncated
	}
	return toSerialize, nil
}

type NullableDatasetQueryResultsData struct {
	value *DatasetQueryResultsData
	isSet bool
}

func (v NullableDatasetQueryResultsData) Get() *DatasetQueryResultsData {
	return v.value
}

func (v *NullableDatasetQueryResultsData) Set(val *DatasetQueryResultsData) {
	v.value = val
	v.isSet = true
}

func (v NullableDatasetQueryResultsData) IsSet() bool {
	return v.isSet
}

func (v *NullableDatasetQueryResultsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatasetQueryResultsData(val *DatasetQueryResultsData) *NullableDatasetQueryResultsData {
	return &NullableDatasetQueryResultsData{value: val, isSet: true}
}

func (v NullableDatasetQueryResultsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatasetQueryResultsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
