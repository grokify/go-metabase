/*
Metabase

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metabase

import (
	"encoding/json"
)

// checks if the DatabaseDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatabaseDetails{}

// DatabaseDetails struct for DatabaseDetails
type DatabaseDetails struct {
	Host                     *string `json:"host,omitempty"`
	Port                     *int32  `json:"port,omitempty"`
	Dbname                   *string `json:"dbname,omitempty"`
	AuthMech                 *int32  `json:"authMech,omitempty"`
	User                     *string `json:"user,omitempty"`
	Password                 *string `json:"password,omitempty"`
	ConnProperties           *string `json:"connProperties,omitempty"`
	LetUserControlScheduling *bool   `json:"let-user-control-scheduling,omitempty"`
}

// NewDatabaseDetails instantiates a new DatabaseDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatabaseDetails() *DatabaseDetails {
	this := DatabaseDetails{}
	return &this
}

// NewDatabaseDetailsWithDefaults instantiates a new DatabaseDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatabaseDetailsWithDefaults() *DatabaseDetails {
	this := DatabaseDetails{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *DatabaseDetails) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseDetails) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *DatabaseDetails) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *DatabaseDetails) SetHost(v string) {
	o.Host = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *DatabaseDetails) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseDetails) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *DatabaseDetails) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *DatabaseDetails) SetPort(v int32) {
	o.Port = &v
}

// GetDbname returns the Dbname field value if set, zero value otherwise.
func (o *DatabaseDetails) GetDbname() string {
	if o == nil || IsNil(o.Dbname) {
		var ret string
		return ret
	}
	return *o.Dbname
}

// GetDbnameOk returns a tuple with the Dbname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseDetails) GetDbnameOk() (*string, bool) {
	if o == nil || IsNil(o.Dbname) {
		return nil, false
	}
	return o.Dbname, true
}

// HasDbname returns a boolean if a field has been set.
func (o *DatabaseDetails) HasDbname() bool {
	if o != nil && !IsNil(o.Dbname) {
		return true
	}

	return false
}

// SetDbname gets a reference to the given string and assigns it to the Dbname field.
func (o *DatabaseDetails) SetDbname(v string) {
	o.Dbname = &v
}

// GetAuthMech returns the AuthMech field value if set, zero value otherwise.
func (o *DatabaseDetails) GetAuthMech() int32 {
	if o == nil || IsNil(o.AuthMech) {
		var ret int32
		return ret
	}
	return *o.AuthMech
}

// GetAuthMechOk returns a tuple with the AuthMech field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseDetails) GetAuthMechOk() (*int32, bool) {
	if o == nil || IsNil(o.AuthMech) {
		return nil, false
	}
	return o.AuthMech, true
}

// HasAuthMech returns a boolean if a field has been set.
func (o *DatabaseDetails) HasAuthMech() bool {
	if o != nil && !IsNil(o.AuthMech) {
		return true
	}

	return false
}

// SetAuthMech gets a reference to the given int32 and assigns it to the AuthMech field.
func (o *DatabaseDetails) SetAuthMech(v int32) {
	o.AuthMech = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *DatabaseDetails) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseDetails) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *DatabaseDetails) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *DatabaseDetails) SetUser(v string) {
	o.User = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *DatabaseDetails) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseDetails) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *DatabaseDetails) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *DatabaseDetails) SetPassword(v string) {
	o.Password = &v
}

// GetConnProperties returns the ConnProperties field value if set, zero value otherwise.
func (o *DatabaseDetails) GetConnProperties() string {
	if o == nil || IsNil(o.ConnProperties) {
		var ret string
		return ret
	}
	return *o.ConnProperties
}

// GetConnPropertiesOk returns a tuple with the ConnProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseDetails) GetConnPropertiesOk() (*string, bool) {
	if o == nil || IsNil(o.ConnProperties) {
		return nil, false
	}
	return o.ConnProperties, true
}

// HasConnProperties returns a boolean if a field has been set.
func (o *DatabaseDetails) HasConnProperties() bool {
	if o != nil && !IsNil(o.ConnProperties) {
		return true
	}

	return false
}

// SetConnProperties gets a reference to the given string and assigns it to the ConnProperties field.
func (o *DatabaseDetails) SetConnProperties(v string) {
	o.ConnProperties = &v
}

// GetLetUserControlScheduling returns the LetUserControlScheduling field value if set, zero value otherwise.
func (o *DatabaseDetails) GetLetUserControlScheduling() bool {
	if o == nil || IsNil(o.LetUserControlScheduling) {
		var ret bool
		return ret
	}
	return *o.LetUserControlScheduling
}

// GetLetUserControlSchedulingOk returns a tuple with the LetUserControlScheduling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseDetails) GetLetUserControlSchedulingOk() (*bool, bool) {
	if o == nil || IsNil(o.LetUserControlScheduling) {
		return nil, false
	}
	return o.LetUserControlScheduling, true
}

// HasLetUserControlScheduling returns a boolean if a field has been set.
func (o *DatabaseDetails) HasLetUserControlScheduling() bool {
	if o != nil && !IsNil(o.LetUserControlScheduling) {
		return true
	}

	return false
}

// SetLetUserControlScheduling gets a reference to the given bool and assigns it to the LetUserControlScheduling field.
func (o *DatabaseDetails) SetLetUserControlScheduling(v bool) {
	o.LetUserControlScheduling = &v
}

func (o DatabaseDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatabaseDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Dbname) {
		toSerialize["dbname"] = o.Dbname
	}
	if !IsNil(o.AuthMech) {
		toSerialize["authMech"] = o.AuthMech
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.ConnProperties) {
		toSerialize["connProperties"] = o.ConnProperties
	}
	if !IsNil(o.LetUserControlScheduling) {
		toSerialize["let-user-control-scheduling"] = o.LetUserControlScheduling
	}
	return toSerialize, nil
}

type NullableDatabaseDetails struct {
	value *DatabaseDetails
	isSet bool
}

func (v NullableDatabaseDetails) Get() *DatabaseDetails {
	return v.value
}

func (v *NullableDatabaseDetails) Set(val *DatabaseDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableDatabaseDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableDatabaseDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatabaseDetails(val *DatabaseDetails) *NullableDatabaseDetails {
	return &NullableDatabaseDetails{value: val, isSet: true}
}

func (v NullableDatabaseDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatabaseDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
