/*
Metabase

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metabase

import (
	"encoding/json"
)

// checks if the DatasetQueryResultsColFingerprintType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatasetQueryResultsColFingerprintType{}

// DatasetQueryResultsColFingerprintType struct for DatasetQueryResultsColFingerprintType
type DatasetQueryResultsColFingerprintType struct {
	PercentJson   *float64 `json:"percent-json,omitempty"`
	PercentUrl    *float64 `json:"percent-url,omitempty"`
	PercentEmail  *float64 `json:"percent-email,omitempty"`
	AverageLength *float64 `json:"average-length,omitempty"`
}

// NewDatasetQueryResultsColFingerprintType instantiates a new DatasetQueryResultsColFingerprintType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatasetQueryResultsColFingerprintType() *DatasetQueryResultsColFingerprintType {
	this := DatasetQueryResultsColFingerprintType{}
	return &this
}

// NewDatasetQueryResultsColFingerprintTypeWithDefaults instantiates a new DatasetQueryResultsColFingerprintType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatasetQueryResultsColFingerprintTypeWithDefaults() *DatasetQueryResultsColFingerprintType {
	this := DatasetQueryResultsColFingerprintType{}
	return &this
}

// GetPercentJson returns the PercentJson field value if set, zero value otherwise.
func (o *DatasetQueryResultsColFingerprintType) GetPercentJson() float64 {
	if o == nil || IsNil(o.PercentJson) {
		var ret float64
		return ret
	}
	return *o.PercentJson
}

// GetPercentJsonOk returns a tuple with the PercentJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatasetQueryResultsColFingerprintType) GetPercentJsonOk() (*float64, bool) {
	if o == nil || IsNil(o.PercentJson) {
		return nil, false
	}
	return o.PercentJson, true
}

// HasPercentJson returns a boolean if a field has been set.
func (o *DatasetQueryResultsColFingerprintType) HasPercentJson() bool {
	if o != nil && !IsNil(o.PercentJson) {
		return true
	}

	return false
}

// SetPercentJson gets a reference to the given float64 and assigns it to the PercentJson field.
func (o *DatasetQueryResultsColFingerprintType) SetPercentJson(v float64) {
	o.PercentJson = &v
}

// GetPercentUrl returns the PercentUrl field value if set, zero value otherwise.
func (o *DatasetQueryResultsColFingerprintType) GetPercentUrl() float64 {
	if o == nil || IsNil(o.PercentUrl) {
		var ret float64
		return ret
	}
	return *o.PercentUrl
}

// GetPercentUrlOk returns a tuple with the PercentUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatasetQueryResultsColFingerprintType) GetPercentUrlOk() (*float64, bool) {
	if o == nil || IsNil(o.PercentUrl) {
		return nil, false
	}
	return o.PercentUrl, true
}

// HasPercentUrl returns a boolean if a field has been set.
func (o *DatasetQueryResultsColFingerprintType) HasPercentUrl() bool {
	if o != nil && !IsNil(o.PercentUrl) {
		return true
	}

	return false
}

// SetPercentUrl gets a reference to the given float64 and assigns it to the PercentUrl field.
func (o *DatasetQueryResultsColFingerprintType) SetPercentUrl(v float64) {
	o.PercentUrl = &v
}

// GetPercentEmail returns the PercentEmail field value if set, zero value otherwise.
func (o *DatasetQueryResultsColFingerprintType) GetPercentEmail() float64 {
	if o == nil || IsNil(o.PercentEmail) {
		var ret float64
		return ret
	}
	return *o.PercentEmail
}

// GetPercentEmailOk returns a tuple with the PercentEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatasetQueryResultsColFingerprintType) GetPercentEmailOk() (*float64, bool) {
	if o == nil || IsNil(o.PercentEmail) {
		return nil, false
	}
	return o.PercentEmail, true
}

// HasPercentEmail returns a boolean if a field has been set.
func (o *DatasetQueryResultsColFingerprintType) HasPercentEmail() bool {
	if o != nil && !IsNil(o.PercentEmail) {
		return true
	}

	return false
}

// SetPercentEmail gets a reference to the given float64 and assigns it to the PercentEmail field.
func (o *DatasetQueryResultsColFingerprintType) SetPercentEmail(v float64) {
	o.PercentEmail = &v
}

// GetAverageLength returns the AverageLength field value if set, zero value otherwise.
func (o *DatasetQueryResultsColFingerprintType) GetAverageLength() float64 {
	if o == nil || IsNil(o.AverageLength) {
		var ret float64
		return ret
	}
	return *o.AverageLength
}

// GetAverageLengthOk returns a tuple with the AverageLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatasetQueryResultsColFingerprintType) GetAverageLengthOk() (*float64, bool) {
	if o == nil || IsNil(o.AverageLength) {
		return nil, false
	}
	return o.AverageLength, true
}

// HasAverageLength returns a boolean if a field has been set.
func (o *DatasetQueryResultsColFingerprintType) HasAverageLength() bool {
	if o != nil && !IsNil(o.AverageLength) {
		return true
	}

	return false
}

// SetAverageLength gets a reference to the given float64 and assigns it to the AverageLength field.
func (o *DatasetQueryResultsColFingerprintType) SetAverageLength(v float64) {
	o.AverageLength = &v
}

func (o DatasetQueryResultsColFingerprintType) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatasetQueryResultsColFingerprintType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PercentJson) {
		toSerialize["percent-json"] = o.PercentJson
	}
	if !IsNil(o.PercentUrl) {
		toSerialize["percent-url"] = o.PercentUrl
	}
	if !IsNil(o.PercentEmail) {
		toSerialize["percent-email"] = o.PercentEmail
	}
	if !IsNil(o.AverageLength) {
		toSerialize["average-length"] = o.AverageLength
	}
	return toSerialize, nil
}

type NullableDatasetQueryResultsColFingerprintType struct {
	value *DatasetQueryResultsColFingerprintType
	isSet bool
}

func (v NullableDatasetQueryResultsColFingerprintType) Get() *DatasetQueryResultsColFingerprintType {
	return v.value
}

func (v *NullableDatasetQueryResultsColFingerprintType) Set(val *DatasetQueryResultsColFingerprintType) {
	v.value = val
	v.isSet = true
}

func (v NullableDatasetQueryResultsColFingerprintType) IsSet() bool {
	return v.isSet
}

func (v *NullableDatasetQueryResultsColFingerprintType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatasetQueryResultsColFingerprintType(val *DatasetQueryResultsColFingerprintType) *NullableDatasetQueryResultsColFingerprintType {
	return &NullableDatasetQueryResultsColFingerprintType{value: val, isSet: true}
}

func (v NullableDatasetQueryResultsColFingerprintType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatasetQueryResultsColFingerprintType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
